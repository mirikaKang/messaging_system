CMAKE_MINIMUM_REQUIRED(VERSION 3.14)

SET(LIBRARY_NAME threads)
set(CMAKE_C_COMPILER "/usr/bin/aarch64-linux-gnu-gcc")
set(CMAKE_CXX_COMPILER "/usr/bin/aarch64-linux-gnu-g++")
SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED TRUE)

SET(HEADER_FILES
    job_priorities.h job.h job_pool.h 
    thread_pool.h thread_worker.h)

SET(SOURCE_FILES
    job.cpp job_pool.cpp
    thread_pool.cpp thread_worker.cpp)

PROJECT(${LIBRARY_NAME} VERSION 1.0.0.0)

IF(BUILD_SHARED_LIBS)
    ADD_LIBRARY(${LIBRARY_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES})
ELSE()
    ADD_LIBRARY(${LIBRARY_NAME} STATIC ${HEADER_FILES} ${SOURCE_FILES})
ENDIF()
    
FIND_PACKAGE(crossguid CONFIG REQUIRED)
TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PUBLIC crossguid)
    
FIND_PACKAGE(cpprestsdk CONFIG REQUIRED)
TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PUBLIC cpprestsdk::cpprest)

TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PUBLIC ../utilities)
TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PUBLIC ../container)

ADD_DEPENDENCIES(${LIBRARY_NAME} container)
TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PUBLIC container)