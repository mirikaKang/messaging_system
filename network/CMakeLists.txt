CMAKE_MINIMUM_REQUIRED(VERSION 3.14)

SET(LIBRARY_NAME network)
set(CMAKE_C_COMPILER "/usr/bin/aarch64-linux-gnu-gcc")
set(CMAKE_CXX_COMPILER "/usr/bin/aarch64-linux-gnu-g++")
SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED TRUE)
set(VCPKG_TARGET_TRIPLET "arm64-linux" CACHE STRING "VCPKG Target Triplet to use")

SET(HEADER_FILES
    session_types.h data_modes.h data_lengths.h
    data_handling.h messaging_client.h 
    messaging_session.h messaging_server.h)

SET(SOURCE_FILES
    data_handling.cpp messaging_client.cpp 
    messaging_session.cpp messaging_server.cpp)

PROJECT(${LIBRARY_NAME} VERSION 1.0.0.0)

IF(BUILD_SHARED_LIBS)
    ADD_LIBRARY(${LIBRARY_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES})
ELSE()
    ADD_LIBRARY(${LIBRARY_NAME} STATIC ${HEADER_FILES} ${SOURCE_FILES})
ENDIF()
    
FIND_PACKAGE(asio CONFIG REQUIRED)
TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PUBLIC asio asio::asio)

TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PUBLIC ../utilities)
TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PUBLIC ../container)
TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PUBLIC ../threads)

ADD_DEPENDENCIES(${LIBRARY_NAME} threads)
TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PUBLIC threads)